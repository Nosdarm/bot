"""Add missing game state columns and timers table

Revision ID: 3f16a82ee39a
Revises: acd0f397bcd8
Create Date: 2025-06-07 02:00:54.131933

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3f16a82ee39a'
down_revision: Union[str, None] = 'acd0f397bcd8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('placeholder', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('guild_settings')
    op.drop_table('item_templates')
    op.drop_table('dialogues')
    op.drop_table('game_logs')
    op.drop_table('pending_moderation_requests')
    op.drop_table('pending_conflicts')
    op.add_column('generated_locations', sa.Column('placeholder', sa.Text(), nullable=True))
    op.drop_column('generated_locations', 'guild_id')
    op.drop_column('generated_locations', 'generated_at')
    op.drop_column('generated_locations', 'user_id')
    op.add_column('generated_npcs', sa.Column('placeholder', sa.Text(), nullable=True))
    op.drop_column('generated_npcs', 'dialogue_hints_i18n')
    op.drop_column('generated_npcs', 'stats_json')
    op.drop_column('generated_npcs', 'abilities_json')
    op.drop_column('generated_npcs', 'faction_affiliations_json')
    op.drop_column('generated_npcs', 'guild_id')
    op.drop_column('generated_npcs', 'ai_prompt_context_json')
    op.drop_column('generated_npcs', 'role_i18n')
    op.drop_column('generated_npcs', 'relationships_json')
    op.drop_column('generated_npcs', 'spells_json')
    op.drop_column('generated_npcs', 'motivation_i18n')
    op.drop_column('generated_npcs', 'inventory_json')
    op.drop_column('generated_npcs', 'is_hostile')
    op.drop_column('generated_npcs', 'backstory_i18n')
    op.drop_column('generated_npcs', 'personality_i18n')
    op.drop_column('generated_npcs', 'name_i18n')
    op.drop_column('generated_npcs', 'current_location_id')
    op.drop_column('generated_npcs', 'skills_json')
    op.add_column('inventory', sa.Column('id', sa.String(), nullable=False))
    op.drop_column('inventory', 'inventory_id')
    op.drop_column('inventory', 'item_template_id')
    op.drop_column('locations', 'template_id')
    op.drop_column('locations', 'state_variables')
    op.drop_column('locations', 'name_i18n')
    op.add_column('players', sa.Column('discord_id', sa.Integer(), nullable=True))
    op.drop_column('players', 'discord_user_id')
    op.alter_column('timers', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('timers', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.add_column('players', sa.Column('discord_user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('players', 'discord_id')
    op.add_column('locations', sa.Column('name_i18n', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('locations', sa.Column('state_variables', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True))
    op.add_column('locations', sa.Column('template_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('inventory', sa.Column('item_template_id', sa.VARCHAR(), server_default=sa.text("'unknown_template'::character varying"), autoincrement=False, nullable=False))
    op.add_column('inventory', sa.Column('inventory_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('inventory', 'id')
    op.add_column('generated_npcs', sa.Column('skills_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('current_location_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('name_i18n', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('personality_i18n', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('backstory_i18n', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('is_hostile', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('inventory_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('motivation_i18n', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('spells_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('relationships_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('role_i18n', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('ai_prompt_context_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('guild_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('faction_affiliations_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('abilities_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('stats_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('generated_npcs', sa.Column('dialogue_hints_i18n', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('generated_npcs', 'placeholder')
    op.add_column('generated_locations', sa.Column('user_id', sa.VARCHAR(), server_default=sa.text("'unknown_user'::character varying"), autoincrement=False, nullable=False))
    op.add_column('generated_locations', sa.Column('generated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('generated_locations', sa.Column('guild_id', sa.VARCHAR(), server_default=sa.text("'unknown_guild'::character varying"), autoincrement=False, nullable=False))
    op.drop_column('generated_locations', 'placeholder')
    op.create_table('pending_conflicts',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('guild_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('conflict_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pending_conflicts_pkey'))
    )
    op.create_table('pending_moderation_requests',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('guild_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('moderator_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('moderated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('moderator_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pending_moderation_requests_pkey'))
    )
    op.create_table('game_logs',
    sa.Column('log_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('guild_id', sa.VARCHAR(), server_default=sa.text("'unknown_guild'::character varying"), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('player_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('event_type', sa.VARCHAR(), server_default=sa.text("'unknown_event'::character varying"), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('related_entities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('context_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_undone', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('log_id', name=op.f('logs_pkey'))
    )
    op.create_table('dialogues',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('guild_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('participants', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('conversation_history', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('state_variables', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('last_activity_game_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('current_stage_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('template_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('dialogues_pkey'))
    )
    op.create_table('item_templates',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('properties', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('guild_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('item_templates_pkey'))
    )
    op.create_table('guild_settings',
    sa.Column('guild_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('guild_id', 'key', name=op.f('guild_settings_pkey'))
    )
    op.drop_table('logs')
    # ### end Alembic commands ###
