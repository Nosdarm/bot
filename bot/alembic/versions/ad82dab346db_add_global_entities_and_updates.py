"""add_global_entities_and_updates

Revision ID: ad82dab346db
Revises: 5cd9625c06db
Create Date: 2025-06-16 10:51:35.333678
# The Create Date above is a placeholder from a previous attempt.
# Alembic automatically sets the Create Date in the file name.
# The actual Create Date will be when this file was last generated by alembic revision.

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
# import uuid # Not strictly needed for op.create_table unless using client-side defaults in migration data


# revision identifiers, used by Alembic.
revision: str = 'ad82dab346db'
down_revision: Union[str, None] = '5cd9625c06db'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # GlobalNpc table
    op.create_table('global_npcs',
        sa.Column('id', sa.String(), nullable=False, primary_key=True),
        sa.Column('guild_id', sa.String(), nullable=False),
        sa.Column('name_i18n', sa.JSON(), nullable=False),
        sa.Column('description_i18n', sa.JSON(), nullable=True),
        sa.Column('current_location_id', sa.String(), sa.ForeignKey('locations.id'), nullable=True),
        sa.Column('npc_template_id', sa.String(), nullable=True),
        sa.Column('state_variables', sa.JSON(), nullable=True),
        sa.Column('faction_id', sa.String(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False, server_default=sa.text('true'))
    )
    op.create_index('idx_globalnpc_guild_id', 'global_npcs', ['guild_id'], unique=False)
    op.create_index('idx_globalnpc_faction_id', 'global_npcs', ['faction_id'], unique=False)
    op.create_index('idx_globalnpc_is_active', 'global_npcs', ['is_active'], unique=False)

    # Update mobile_groups table
    op.add_column('mobile_groups', sa.Column('description_i18n', sa.JSON(), nullable=True))
    op.add_column('mobile_groups', sa.Column('current_location_id', sa.String(), sa.ForeignKey('locations.id'), nullable=True))
    op.add_column('mobile_groups', sa.Column('member_ids', sa.JSON(), nullable=True))
    op.add_column('mobile_groups', sa.Column('destination_location_id', sa.String(), sa.ForeignKey('locations.id'), nullable=True))
    op.add_column('mobile_groups', sa.Column('state_variables', sa.JSON(), nullable=True))
    op.add_column('mobile_groups', sa.Column('is_active', sa.Boolean(), nullable=False, server_default=sa.text('true')))

    op.alter_column('mobile_groups', 'name_i18n', existing_type=sa.JSON(), nullable=False)

    op.create_index('idx_mobilegroup_is_active', 'mobile_groups', ['is_active'], unique=False)

    # Update npcs table
    op.add_column('npcs', sa.Column('faction_id', sa.String(), nullable=True))
    op.create_index('idx_npc_faction_id', 'npcs', ['faction_id'], unique=False)


def downgrade() -> None:
    """Downgrade schema."""
    # Revert npcs table changes
    op.drop_index('idx_npc_faction_id', table_name='npcs', if_exists=True)
    op.drop_column('npcs', 'faction_id')

    # Revert mobile_groups table changes
    op.drop_index('idx_mobilegroup_is_active', table_name='mobile_groups', if_exists=True)
    op.alter_column('mobile_groups', 'name_i18n', existing_type=sa.JSON(), nullable=True)
    op.drop_column('mobile_groups', 'is_active')
    op.drop_column('mobile_groups', 'state_variables')
    op.drop_column('mobile_groups', 'destination_location_id')
    op.drop_column('mobile_groups', 'member_ids')
    op.drop_column('mobile_groups', 'current_location_id')
    op.drop_column('mobile_groups', 'description_i18n')

    # Drop GlobalNpc table
    op.drop_index('idx_globalnpc_is_active', table_name='global_npcs', if_exists=True)
    op.drop_index('idx_globalnpc_faction_id', table_name='global_npcs', if_exists=True)
    op.drop_index('idx_globalnpc_guild_id', table_name='global_npcs', if_exists=True)
    op.drop_table('global_npcs')
