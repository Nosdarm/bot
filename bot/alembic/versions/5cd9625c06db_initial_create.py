"""initial_create

Revision ID: 5cd9625c06db
Revises: 
Create Date: 2025-06-15 14:39:08.233085

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5cd9625c06db'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Ensure uuid-ossp extension is available for uuid_generate_v4()
    op.execute('CREATE EXTENSION IF NOT EXISTS "uuid-ossp";')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('abilities',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=False),
    sa.Column('description_i18n', sa.JSON(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('effect_i18n', sa.JSON(), nullable=False),
    sa.Column('cost', sa.JSON(), nullable=True),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.Column('type_i18n', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ability_guild_id', 'abilities', ['guild_id'], unique=False)
    op.create_table('crafting_queues',
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('queue', sa.JSON(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('entity_id', 'entity_type', 'guild_id')
    )
    op.create_table('events',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('template_id', sa.String(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('channel_id', sa.String(), nullable=True),
    sa.Column('current_stage_id', sa.String(), nullable=True),
    sa.Column('players', sa.JSON(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('stages_data', sa.JSON(), nullable=True),
    sa.Column('end_message_template_i18n', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_guild_id'), 'events', ['guild_id'], unique=False)
    op.create_table('generated_factions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_generatedfaction_guild_id', 'generated_factions', ['guild_id'], unique=False)
    op.create_index(op.f('ix_generated_factions_guild_id'), 'generated_factions', ['guild_id'], unique=False)
    op.create_table('generated_locations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('descriptions_i18n', sa.JSON(), nullable=True),
    sa.Column('details_i18n', sa.JSON(), nullable=True),
    sa.Column('tags_i18n', sa.JSON(), nullable=True),
    sa.Column('atmosphere_i18n', sa.JSON(), nullable=True),
    sa.Column('features_i18n', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_generatedlocation_guild_id', 'generated_locations', ['guild_id'], unique=False)
    op.create_table('generated_npcs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('backstory_i18n', sa.JSON(), nullable=True),
    sa.Column('persona_i18n', sa.JSON(), nullable=True),
    sa.Column('effective_stats_json', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_generatednpc_guild_id', 'generated_npcs', ['guild_id'], unique=False)
    op.create_table('generated_quests',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_generatedquest_guild_id', 'generated_quests', ['guild_id'], unique=False)
    op.create_index(op.f('ix_generated_quests_guild_id'), 'generated_quests', ['guild_id'], unique=False)
    op.create_table('global_state',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('item_properties',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_itemproperty_guild_id', 'item_properties', ['guild_id'], unique=False)
    op.create_table('item_templates',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=False),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_itemtemplate_guild_id', 'item_templates', ['guild_id'], unique=False)
    op.create_table('location_templates',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_templates_guild_id'), 'location_templates', ['guild_id'], unique=False)
    op.create_table('locations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('static_name', sa.String(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=False),
    sa.Column('descriptions_i18n', sa.JSON(), nullable=False),
    sa.Column('type_i18n', sa.JSON(), nullable=False),
    sa.Column('coordinates', sa.JSON(), nullable=True),
    sa.Column('static_connections', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('exits', sa.JSON(), nullable=True),
    sa.Column('inventory', sa.JSON(), nullable=True),
    sa.Column('npc_ids', sa.JSON(), nullable=True),
    sa.Column('event_triggers', sa.JSON(), nullable=True),
    sa.Column('template_id', sa.String(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('details_i18n', sa.JSON(), nullable=True),
    sa.Column('tags_i18n', sa.JSON(), nullable=True),
    sa.Column('atmosphere_i18n', sa.JSON(), nullable=True),
    sa.Column('features_i18n', sa.JSON(), nullable=True),
    sa.Column('channel_id', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_locations_guild_id'), 'locations', ['guild_id'], unique=False)
    op.create_table('mobile_groups',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mobilegroup_guild_id', 'mobile_groups', ['guild_id'], unique=False)
    op.create_index(op.f('ix_mobile_groups_guild_id'), 'mobile_groups', ['guild_id'], unique=False)
    op.create_table('new_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('item_type', sa.String(), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='uq_new_item_name')
    )
    op.create_table('parties',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('player_ids', sa.JSON(), nullable=True),
    sa.Column('current_location_id', sa.String(), nullable=True),
    sa.Column('turn_status', sa.String(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('leader_id', sa.String(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('current_action', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['current_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parties_guild_id'), 'parties', ['guild_id'], unique=False)
    op.create_table('pending_conflicts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('conflict_data_json', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('resolution_data_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('resolved_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pending_conflicts_guild_id'), 'pending_conflicts', ['guild_id'], unique=False)
    op.create_index(op.f('ix_pending_conflicts_status'), 'pending_conflicts', ['status'], unique=False)
    op.create_table('players',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('discord_id', sa.String(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('current_location_id', sa.String(), nullable=True),
    sa.Column('selected_language', sa.String(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('unspent_xp', sa.Integer(), nullable=True),
    sa.Column('gold', sa.Integer(), nullable=True),
    sa.Column('current_game_status', sa.String(), nullable=True),
    sa.Column('collected_actions_json', sa.JSON(), nullable=True),
    sa.Column('current_party_id', sa.String(), nullable=True),
    sa.Column('party_id', sa.String(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('stats', sa.JSON(), nullable=True),
    sa.Column('current_action', sa.String(), nullable=True),
    sa.Column('action_queue', sa.JSON(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('hp', sa.Float(), nullable=True),
    sa.Column('max_health', sa.Float(), nullable=True),
    sa.Column('is_alive', sa.Boolean(), nullable=True),
    sa.Column('status_effects', sa.JSON(), nullable=True),
    sa.Column('race', sa.String(), nullable=True),
    sa.Column('mp', sa.Integer(), nullable=True),
    sa.Column('attack', sa.Integer(), nullable=True),
    sa.Column('defense', sa.Integer(), nullable=True),
    sa.Column('skills_data_json', sa.JSON(), nullable=True),
    sa.Column('abilities_data_json', sa.JSON(), nullable=True),
    sa.Column('spells_data_json', sa.JSON(), nullable=True),
    sa.Column('character_class', sa.String(), nullable=True),
    sa.Column('flags_json', sa.JSON(), nullable=True),
    sa.Column('active_quests', sa.JSON(), nullable=True),
    sa.Column('known_spells', sa.JSON(), nullable=True),
    sa.Column('spell_cooldowns', sa.JSON(), nullable=True),
    sa.Column('inventory', sa.JSON(), nullable=True),
    sa.Column('effective_stats_json', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['current_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('discord_id', 'guild_id', name='uq_player_discord_guild')
    )
    op.create_index(op.f('ix_players_is_active'), 'players', ['is_active'], unique=False)
    op.create_foreign_key('fk_parties_leader_id', 'parties', 'players', ['leader_id'], ['id'])
    op.create_foreign_key('fk_players_current_party_id', 'players', 'parties', ['current_party_id'], ['id'])
    op.create_foreign_key('fk_players_party_id', 'players', 'parties', ['party_id'], ['id'])
    op.create_table('questlines',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_questline_guild_id', 'questlines', ['guild_id'], unique=False)
    op.create_table('relationships',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('entity1_id', sa.String(), nullable=False),
    sa.Column('entity1_type', sa.String(), nullable=False),
    sa.Column('entity2_id', sa.String(), nullable=False),
    sa.Column('entity2_type', sa.String(), nullable=False),
    sa.Column('relationship_type_i18n', sa.JSON(), nullable=True),
    sa.Column('status_i18n', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_relationship_entity1', 'relationships', ['guild_id', 'entity1_id', 'entity1_type'], unique=False)
    op.create_index('idx_relationship_entity2', 'relationships', ['guild_id', 'entity2_id', 'entity2_type'], unique=False)
    op.create_index('idx_relationship_guild_id', 'relationships', ['guild_id'], unique=False)
    op.create_index(op.f('ix_relationships_guild_id'), 'relationships', ['guild_id'], unique=False)
    op.create_table('rpg_characters',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('class_name', sa.String(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('health', sa.Integer(), nullable=False),
    sa.Column('mana', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('health >= 0', name='check_health_non_negative'),
    sa.CheckConstraint('level >= 0', name='check_level_non_negative'),
    sa.CheckConstraint('mana >= 0', name='check_mana_non_negative'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rules_config',
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('config_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('skills',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_skill_guild_id', 'skills', ['guild_id'], unique=False)
    op.create_table('statuses',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status_type', sa.String(), nullable=False),
    sa.Column('target_id', sa.String(), nullable=False),
    sa.Column('target_type', sa.String(), nullable=False),
    sa.Column('duration_turns', sa.Float(), nullable=True),
    sa.Column('applied_at', sa.Float(), nullable=True),
    sa.Column('source_id', sa.String(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('effects', sa.JSON(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_statuses_guild_id'), 'statuses', ['guild_id'], unique=False)
    op.create_table('timers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('ends_at', sa.Float(), nullable=False),
    sa.Column('callback_data', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_timers_guild_id'), 'timers', ['guild_id'], unique=False)
    op.create_table('characters',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('name_i18n', sa.JSON(), nullable=False),
    sa.Column('class_i18n', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('xp', sa.Integer(), nullable=False),
    sa.Column('stats', sa.JSON(), nullable=True),
    sa.Column('current_hp', sa.Float(), nullable=True),
    sa.Column('max_hp', sa.Float(), nullable=True),
    sa.Column('abilities', sa.JSON(), nullable=True),
    sa.Column('inventory', sa.JSON(), nullable=True),
    sa.Column('npc_relationships', sa.JSON(), nullable=True),
    sa.Column('is_active_char', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_character_guild_player', 'characters', ['guild_id', 'player_id'], unique=False)
    op.create_index(op.f('ix_characters_guild_id'), 'characters', ['guild_id'], unique=False)
    op.create_index(op.f('ix_characters_is_active_char'), 'characters', ['is_active_char'], unique=False)
    op.create_index(op.f('ix_characters_player_id'), 'characters', ['player_id'], unique=False)
    op.create_table('combats',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('location_id', sa.String(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('participants', sa.JSON(), nullable=False),
    sa.Column('initial_positions', sa.JSON(), nullable=True),
    sa.Column('current_round', sa.Integer(), nullable=True),
    sa.Column('combat_log', sa.Text(), nullable=True),
    sa.Column('turn_log_structured', sa.JSON(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('combat_rules_snapshot', sa.JSON(), nullable=True),
    sa.Column('channel_id', sa.String(), nullable=True),
    sa.Column('event_id', sa.String(), nullable=True),
    sa.Column('turn_order', sa.JSON(), nullable=True),
    sa.Column('current_turn_index', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_combats_guild_id'), 'combats', ['guild_id'], unique=False)
    op.create_index(op.f('ix_combats_status'), 'combats', ['status'], unique=False)
    op.create_table('game_logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=True),
    sa.Column('party_id', sa.String(), nullable=True),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('message_key', sa.String(), nullable=True),
    sa.Column('message_params', sa.JSON(), nullable=True),
    sa.Column('location_id', sa.String(), nullable=True),
    sa.Column('involved_entities_ids', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('consequences_data', sa.JSON(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('channel_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['party_id'], ['parties.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_game_logs_guild_id'), 'game_logs', ['guild_id'], unique=False)
    op.create_table('items',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('template_id', sa.String(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('owner_id', sa.String(), nullable=True),
    sa.Column('owner_type', sa.String(), nullable=True),
    sa.Column('location_id', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('is_temporary', sa.Boolean(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('slot', sa.String(), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_item_guild_id', 'items', ['guild_id'], unique=False)
    op.create_table('npcs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('template_id', sa.String(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('backstory_i18n', sa.JSON(), nullable=True),
    sa.Column('persona_i18n', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('location_id', sa.String(), nullable=True),
    sa.Column('stats', sa.JSON(), nullable=True),
    sa.Column('inventory', sa.JSON(), nullable=True),
    sa.Column('current_action', sa.String(), nullable=True),
    sa.Column('action_queue', sa.JSON(), nullable=True),
    sa.Column('party_id', sa.String(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('health', sa.Float(), nullable=True),
    sa.Column('max_health', sa.Float(), nullable=True),
    sa.Column('is_alive', sa.Boolean(), nullable=True),
    sa.Column('status_effects', sa.JSON(), nullable=True),
    sa.Column('is_temporary', sa.Boolean(), nullable=True),
    sa.Column('archetype', sa.String(), nullable=True),
    sa.Column('traits', sa.JSON(), nullable=True),
    sa.Column('desires', sa.JSON(), nullable=True),
    sa.Column('motives', sa.JSON(), nullable=True),
    sa.Column('skills_data', sa.JSON(), nullable=True),
    sa.Column('equipment_data', sa.JSON(), nullable=True),
    sa.Column('abilities_data', sa.JSON(), nullable=True),
    sa.Column('faction', sa.JSON(), nullable=True),
    sa.Column('behavior_tags', sa.JSON(), nullable=True),
    sa.Column('loot_table_id', sa.String(), nullable=True),
    sa.Column('effective_stats_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['party_id'], ['parties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_npcs_guild_id'), 'npcs', ['guild_id'], unique=False)
    op.create_table('quest_steps',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('questline_id', sa.String(), nullable=False),
    sa.Column('step_details_i18n', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['questline_id'], ['questlines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_queststep_guild_questline', 'quest_steps', ['guild_id', 'questline_id'], unique=False)
    op.create_index(op.f('ix_quest_steps_guild_id'), 'quest_steps', ['guild_id'], unique=False)
    op.create_table('user_settings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('language_code', sa.String(length=10), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'guild_id', name='uq_user_guild_settings')
    )
    op.create_index('idx_user_settings_user_guild', 'user_settings', ['user_id', 'guild_id'], unique=False)
    op.create_index(op.f('ix_user_settings_guild_id'), 'user_settings', ['guild_id'], unique=False)
    op.create_table('inventory',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('new_character_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('character_id', sa.String(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('quantity > 0', name='check_new_char_item_quantity_positive'),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['new_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_new_character_items_character_id'), 'new_character_items', ['character_id'], unique=False)
    op.create_index(op.f('ix_new_character_items_item_id'), 'new_character_items', ['item_id'], unique=False)
    op.create_table('player_npc_memory',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('npc_id', sa.String(), nullable=False),
    sa.Column('memory_details_i18n', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['npc_id'], ['npcs.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_playernpcmemory_guild_player_npc', 'player_npc_memory', ['guild_id', 'player_id', 'npc_id'], unique=False)
    op.create_index('idx_playernpcmemory_npc_id', 'player_npc_memory', ['npc_id'], unique=False)
    op.create_index('idx_playernpcmemory_player_id', 'player_npc_memory', ['player_id'], unique=False)
    op.create_index(op.f('ix_player_npc_memory_guild_id'), 'player_npc_memory', ['guild_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_player_npc_memory_guild_id'), table_name='player_npc_memory')
    op.drop_index('idx_playernpcmemory_player_id', table_name='player_npc_memory')
    op.drop_index('idx_playernpcmemory_npc_id', table_name='player_npc_memory')
    op.drop_index('idx_playernpcmemory_guild_player_npc', table_name='player_npc_memory')
    op.drop_table('player_npc_memory')
    op.drop_index(op.f('ix_new_character_items_item_id'), table_name='new_character_items')
    op.drop_index(op.f('ix_new_character_items_character_id'), table_name='new_character_items')
    op.drop_table('new_character_items')
    op.drop_table('inventory')
    op.drop_index(op.f('ix_user_settings_guild_id'), table_name='user_settings')
    op.drop_index('idx_user_settings_user_guild', table_name='user_settings')
    op.drop_table('user_settings')
    op.drop_index(op.f('ix_quest_steps_guild_id'), table_name='quest_steps')
    op.drop_index('idx_queststep_guild_questline', table_name='quest_steps')
    op.drop_table('quest_steps')
    op.drop_index(op.f('ix_npcs_guild_id'), table_name='npcs')
    op.drop_table('npcs')
    op.drop_index('idx_item_guild_id', table_name='items')
    op.drop_table('items')
    op.drop_index(op.f('ix_game_logs_guild_id'), table_name='game_logs')
    op.drop_table('game_logs')
    op.drop_index(op.f('ix_combats_status'), table_name='combats')
    op.drop_index(op.f('ix_combats_guild_id'), table_name='combats')
    op.drop_table('combats')
    op.drop_index(op.f('ix_characters_player_id'), table_name='characters')
    op.drop_index(op.f('ix_characters_is_active_char'), table_name='characters')
    op.drop_index(op.f('ix_characters_guild_id'), table_name='characters')
    op.drop_index('idx_character_guild_player', table_name='characters')
    op.drop_table('characters')
    op.drop_index(op.f('ix_timers_guild_id'), table_name='timers')
    op.drop_table('timers')
    op.drop_index(op.f('ix_statuses_guild_id'), table_name='statuses')
    op.drop_table('statuses')
    op.drop_index('idx_skill_guild_id', table_name='skills')
    op.drop_table('skills')
    op.drop_table('rules_config')
    op.drop_table('rpg_characters')
    op.drop_index(op.f('ix_relationships_guild_id'), table_name='relationships')
    op.drop_index('idx_relationship_guild_id', table_name='relationships')
    op.drop_index('idx_relationship_entity2', table_name='relationships')
    op.drop_index('idx_relationship_entity1', table_name='relationships')
    op.drop_table('relationships')
    op.drop_index('idx_questline_guild_id', table_name='questlines')
    op.drop_table('questlines')
    op.drop_constraint('fk_players_party_id', 'players', type_='foreignkey')
    op.drop_constraint('fk_players_current_party_id', 'players', type_='foreignkey')
    op.drop_index(op.f('ix_players_is_active'), table_name='players')
    op.drop_table('players')
    op.drop_index(op.f('ix_pending_conflicts_status'), table_name='pending_conflicts')
    op.drop_index(op.f('ix_pending_conflicts_guild_id'), table_name='pending_conflicts')
    op.drop_table('pending_conflicts')
    op.drop_constraint('fk_parties_leader_id', 'parties', type_='foreignkey')
    op.drop_index(op.f('ix_parties_guild_id'), table_name='parties')
    op.drop_table('parties')
    op.drop_table('new_items')
    op.drop_index(op.f('ix_mobile_groups_guild_id'), table_name='mobile_groups')
    op.drop_index('idx_mobilegroup_guild_id', table_name='mobile_groups')
    op.drop_table('mobile_groups')
    op.drop_index(op.f('ix_locations_guild_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_location_templates_guild_id'), table_name='location_templates')
    op.drop_table('location_templates')
    op.drop_index('idx_itemtemplate_guild_id', table_name='item_templates')
    op.drop_table('item_templates')
    op.drop_index('idx_itemproperty_guild_id', table_name='item_properties')
    op.drop_table('item_properties')
    op.drop_table('global_state')
    op.drop_index(op.f('ix_generated_quests_guild_id'), table_name='generated_quests')
    op.drop_index('idx_generatedquest_guild_id', table_name='generated_quests')
    op.drop_table('generated_quests')
    op.drop_index('idx_generatednpc_guild_id', table_name='generated_npcs')
    op.drop_table('generated_npcs')
    op.drop_index('idx_generatedlocation_guild_id', table_name='generated_locations')
    op.drop_table('generated_locations')
    op.drop_index(op.f('ix_generated_factions_guild_id'), table_name='generated_factions')
    op.drop_index('idx_generatedfaction_guild_id', table_name='generated_factions')
    op.drop_table('generated_factions')
    op.drop_index(op.f('ix_events_guild_id'), table_name='events')
    op.drop_table('events')
    op.drop_table('crafting_queues')
    op.drop_index('idx_ability_guild_id', table_name='abilities')
    op.drop_table('abilities')
    # Drop uuid-ossp extension if no longer needed by other parts of the DB
    op.execute('DROP EXTENSION IF EXISTS "uuid-ossp";')
    # ### end Alembic commands ###
