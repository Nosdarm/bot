"""add_dialogues_and_gamelogs_tables_v4

Revision ID: cb2f59e829fc
Revises: 
Create Date: 2025-06-22 15:41:25.150546

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cb2f59e829fc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands for game_logs table (auto generated by Alembic) ###
    op.create_table('game_logs',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('guild_id', sa.Text(), nullable=False),
    sa.Column('player_id', sa.Text(), nullable=True),
    sa.Column('party_id', sa.Text(), nullable=True),
    sa.Column('location_id', sa.Text(), nullable=True),
    sa.Column('event_type', sa.Text(), nullable=False),
    sa.Column('description_key', sa.Text(), nullable=True),
    sa.Column('description_params_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('involved_entities_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='JSON array or object of involved entity IDs, e.g., {"characters": [], "npcs": []}'),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Flexible JSON field for additional structured data about the event'),
    sa.Column('channel_id', sa.Text(), nullable=True),
    sa.Column('source_entity_id', sa.Text(), nullable=True),
    sa.Column('source_entity_type', sa.Text(), nullable=True),
    sa.Column('target_entity_id', sa.Text(), nullable=True),
    sa.Column('target_entity_type', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.guild_id'], name='fk_game_logs_guild_id_guild_configs', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name='fk_game_logs_location_id_locations'),
    sa.ForeignKeyConstraint(['party_id'], ['parties.id'], name='fk_game_logs_party_id_parties'),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name='fk_game_logs_player_id_players'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_game_logs')) 
    )
    op.create_index(op.f('ix_game_logs_event_type'), 'game_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_game_logs_guild_id'), 'game_logs', ['guild_id'], unique=False)
    op.create_index(op.f('ix_game_logs_location_id'), 'game_logs', ['location_id'], unique=False)
    op.create_index(op.f('ix_game_logs_party_id'), 'game_logs', ['party_id'], unique=False)
    op.create_index(op.f('ix_game_logs_player_id'), 'game_logs', ['player_id'], unique=False)
    op.create_index(op.f('ix_game_logs_timestamp'), 'game_logs', ['timestamp'], unique=False)
    # ### end Alembic commands for game_logs ###

    # ### commands for dialogues table were removed as table already exists ###
    # pass 
    # ### end Alembic commands for dialogues ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands for dialogues table were removed as table already exists ###
    # op.drop_index(op.f('ix_dialogues_is_active'), table_name='dialogues')
    # op.drop_index(op.f('ix_dialogues_guild_id'), table_name='dialogues')
    # op.drop_table('dialogues')
    # ### end Alembic commands for dialogues ###

    # ### commands for game_logs table (auto generated by Alembic) ###
    op.drop_index(op.f('ix_game_logs_timestamp'), table_name='game_logs')
    op.drop_index(op.f('ix_game_logs_player_id'), table_name='game_logs')
    op.drop_index(op.f('ix_game_logs_party_id'), table_name='game_logs')
    op.drop_index(op.f('ix_game_logs_location_id'), table_name='game_logs')
    op.drop_index(op.f('ix_game_logs_guild_id'), table_name='game_logs')
    op.drop_index(op.f('ix_game_logs_event_type'), table_name='game_logs')
    op.drop_table('game_logs')
    # ### end Alembic commands for game_logs ###