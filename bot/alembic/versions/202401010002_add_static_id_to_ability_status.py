"""add_static_id_to_ability_status

Revision ID: 202401010002
Revises: 202401010001
Create Date: 2024-01-01 00:02:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '202401010002'
down_revision: Union[str, None] = '202401010001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('abilities', sa.Column('static_id', sa.String(), nullable=True))
    op.create_index('idx_ability_guild_id', 'abilities', ['guild_id'], unique=False) # Recreate index if it was part of __table_args__ and got removed by model change
    op.create_unique_constraint('uq_ability_guild_static_id', 'abilities', ['guild_id', 'static_id'])

    op.add_column('statuses', sa.Column('static_id', sa.String(), nullable=False))
    op.create_index('idx_status_guild_static_id', 'statuses', ['guild_id', 'static_id'], unique=False)
    op.create_unique_constraint('uq_status_guild_static_id', 'statuses', ['guild_id', 'static_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_status_guild_static_id', 'statuses', type_='unique')
    op.drop_index('idx_status_guild_static_id', table_name='statuses')
    op.drop_column('statuses', 'static_id')

    op.drop_constraint('uq_ability_guild_static_id', 'abilities', type_='unique')
    # op.drop_index('idx_ability_guild_id', table_name='abilities') # Do not drop this index if it existed before for guild_id only
    op.drop_column('abilities', 'static_id')
    # ### end Alembic commands ###
