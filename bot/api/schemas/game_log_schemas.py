# bot/api/schemas/game_log_schemas.py
from pydantic import BaseModel, Field
from typing import Optional, List, Dict, Any
from datetime import datetime

class ParticipatingEntity(BaseModel):
    type: str = Field(..., description="Type of entity, e.g., 'player', 'npc', 'item'")
    id: str = Field(..., description="Unique ID of the entity")

class GameLogEntryBase(BaseModel):
    event_type: str = Field(..., description="Machine-readable type of the event, e.g., 'quest_started', 'item_looted'")

    # For i18n display of the event, one of these should be prioritized by client:
    message_key: Optional[str] = Field(None, description="Localization key for a templated event message")
    message_params: Optional[Dict[str, Any]] = Field(None, description="Parameters for the templated event message")
    description_i18n: Optional[Dict[str, str]] = Field(None, description="Detailed multilingual description of the event, if not using message_key")

    # Contextual IDs
    player_id: Optional[str] = Field(None, description="ID of the player primarily involved, if any")
    party_id: Optional[str] = Field(None, description="ID of the party primarily involved, if any")
    location_id: Optional[str] = Field(None, description="ID of the location where the event occurred, if any")

    involved_entities_ids: Optional[List[ParticipatingEntity]] = Field(None, description="List of specific entities involved (players, NPCs, items, etc.)")
    consequences_data: Optional[Dict[str, Any]] = Field(None, description="Structured data about the outcomes/consequences of the event")
    details: Optional[Dict[str, Any]] = Field(None, description="Other ad-hoc details about the event")
    channel_id: Optional[str] = Field(None, description="Discord channel ID related to the event, if any")


class GameLogEntryCreate(GameLogEntryBase):
    # guild_id will be from path parameter
    # timestamp is auto-generated by DB
    pass

class GameLogEntryResponse(GameLogEntryBase):
    id: str = Field(..., description="Unique ID of the game log entry")
    guild_id: str = Field(..., description="Guild ID this log entry belongs to")
    timestamp: datetime = Field(..., description="Timestamp of when the event was logged")

    class Config:
        orm_mode = True
