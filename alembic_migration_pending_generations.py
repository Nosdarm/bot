"""Create pending_generations table

Revision ID: CREATE_PENDING_GENERATIONS_TABLE # Replace with actual new revision ID
Revises: ADD_CRAFTING_RECIPES_TABLE # Replace with ID of CraftingRecipe migration
Create Date: YYYY-MM-DD HH:MM:SS.MS

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import JSONB

# revision identifiers, used by Alembic.
revision = 'CREATE_PENDING_GENERATIONS_TABLE' # Replace with actual new revision ID
down_revision = 'ADD_CRAFTING_RECIPES_TABLE' # Replace with actual previous revision ID
branch_labels = None
depends_on = None

TABLE_NAME = 'pending_generations'

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        TABLE_NAME,
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('guild_id', sa.String(), nullable=False),
        sa.Column('request_type', sa.String(), nullable=False),
        sa.Column('request_params_json', JSONB, nullable=True),
        sa.Column('raw_ai_output_text', sa.Text(), nullable=True),
        sa.Column('parsed_data_json', JSONB, nullable=True),
        sa.Column('validation_issues_json', JSONB, nullable=True),
        sa.Column('status', sa.String(), nullable=False, server_default="pending_validation"),
        sa.Column('created_by_user_id', sa.String(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('moderated_by_user_id', sa.String(), nullable=True),
        sa.Column('moderated_at', sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column('moderator_notes_i18n', JSONB, nullable=True),

        sa.PrimaryKeyConstraint('id', name=op.f(f'pk_{TABLE_NAME}')),
        sa.ForeignKeyConstraint(['guild_id'], ['guild_configs.guild_id'], name=op.f(f'fk_{TABLE_NAME}_guild_id_guild_configs'), ondelete='CASCADE')
    )

    op.create_index(op.f(f'ix_{TABLE_NAME}_guild_id'), TABLE_NAME, ['guild_id'], unique=False)
    op.create_index(op.f(f'ix_{TABLE_NAME}_request_type'), TABLE_NAME, ['request_type'], unique=False)
    op.create_index(op.f(f'ix_{TABLE_NAME}_status'), TABLE_NAME, ['status'], unique=False)
    op.create_index('idx_pendinggeneration_guild_status', TABLE_NAME, ['guild_id', 'status'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table(TABLE_NAME)
    # Indexes and FKs associated with the table are typically dropped automatically with op.drop_table()
    # If specific index/constraint drop is needed before table drop for some reason (e.g. complex dependencies),
    # they would be listed here:
    # op.drop_index('idx_pendinggeneration_guild_status', table_name=TABLE_NAME)
    # op.drop_index(op.f(f'ix_{TABLE_NAME}_status'), table_name=TABLE_NAME)
    # op.drop_index(op.f(f'ix_{TABLE_NAME}_request_type'), table_name=TABLE_NAME)
    # op.drop_index(op.f(f'ix_{TABLE_NAME}_guild_id'), table_name=TABLE_NAME)
    # ### end Alembic commands ###
