"""add_missing_tables_and_update_stubs

Revision ID: 7eaa59f3583f
Revises: d7dbd3ac06e8
Create Date: 2025-06-05 09:03:14.371784

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7eaa59f3583f'
down_revision: Union[str, None] = 'fd740b26ce51'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crafting_queues',
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('queue', sa.JSON(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('entity_id', 'entity_type', 'guild_id')
    )
    op.create_table('events',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('template_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('channel_id', sa.String(), nullable=True),
    sa.Column('current_stage_id', sa.String(), nullable=True),
    sa.Column('players', sa.JSON(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('stages_data', sa.JSON(), nullable=True),
    sa.Column('end_message_template', sa.Text(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('global_state',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('location_templates',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('combats',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('location_id', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('participants', sa.JSON(), nullable=True),
    sa.Column('current_round', sa.Integer(), nullable=True),
    sa.Column('combat_log', sa.Text(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('channel_id', sa.String(), nullable=True),
    sa.Column('event_id', sa.String(), nullable=True),
    sa.Column('turn_order', sa.JSON(), nullable=True),
    sa.Column('current_turn_index', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('npcs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('template_id', sa.String(), nullable=True),
    sa.Column('name_i18n', sa.JSON(), nullable=True),
    sa.Column('description_i18n', sa.JSON(), nullable=True),
    sa.Column('backstory_i18n', sa.JSON(), nullable=True),
    sa.Column('persona_i18n', sa.JSON(), nullable=True),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('location_id', sa.String(), nullable=True),
    sa.Column('stats', sa.JSON(), nullable=True),
    sa.Column('inventory', sa.JSON(), nullable=True),
    sa.Column('current_action', sa.String(), nullable=True),
    sa.Column('action_queue', sa.JSON(), nullable=True),
    sa.Column('party_id', sa.String(), nullable=True),
    sa.Column('state_variables', sa.JSON(), nullable=True),
    sa.Column('health', sa.Integer(), nullable=True),
    sa.Column('max_health', sa.Integer(), nullable=True),
    sa.Column('is_alive', sa.Boolean(), nullable=True),
    sa.Column('status_effects', sa.JSON(), nullable=True),
    sa.Column('is_temporary', sa.Boolean(), nullable=True),
    sa.Column('archetype', sa.String(), nullable=True),
    sa.Column('traits', sa.JSON(), nullable=True),
    sa.Column('desires', sa.JSON(), nullable=True),
    sa.Column('motives', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['party_id'], ['parties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('world_state')
    op.drop_column('inventory', 'placeholder')
    op.add_column('items', sa.Column('template_id', sa.String(), nullable=True))
    op.add_column('items', sa.Column('guild_id', sa.String(), nullable=True))
    op.add_column('items', sa.Column('owner_id', sa.String(), nullable=True))
    op.add_column('items', sa.Column('owner_type', sa.String(), nullable=True))
    op.add_column('items', sa.Column('location_id', sa.String(), nullable=True))
    op.add_column('items', sa.Column('quantity', sa.Integer(), nullable=True))
    op.add_column('items', sa.Column('state_variables', sa.JSON(), nullable=True))
    op.add_column('items', sa.Column('is_temporary', sa.Boolean(), nullable=True))
    op.add_column('items', sa.Column('name_i18n', sa.JSON(), nullable=True))
    op.add_column('items', sa.Column('description_i18n', sa.JSON(), nullable=True))
    op.add_column('items', sa.Column('properties', sa.JSON(), nullable=True))
    op.add_column('items', sa.Column('slot', sa.String(), nullable=True))
    op.add_column('items', sa.Column('value', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'items', 'locations', ['location_id'], ['id'])
    op.drop_column('items', 'placeholder')
    op.add_column('locations', sa.Column('guild_id', sa.String(), nullable=False))
    op.add_column('parties', sa.Column('name_i18n', sa.JSON(), nullable=True))
    op.add_column('parties', sa.Column('guild_id', sa.String(), nullable=False))
    op.add_column('parties', sa.Column('leader_id', sa.String(), nullable=True))
    op.add_column('parties', sa.Column('state_variables', sa.JSON(), nullable=True))
    op.add_column('parties', sa.Column('current_action', sa.String(), nullable=True))
    op.create_foreign_key(None, 'parties', 'players', ['leader_id'], ['id'])
    op.add_column('players', sa.Column('guild_id', sa.String(), nullable=False))
    op.add_column('players', sa.Column('stats', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('current_action', sa.String(), nullable=True))
    op.add_column('players', sa.Column('action_queue', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('state_variables', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('hp', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('max_health', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('is_alive', sa.Boolean(), nullable=True))
    op.add_column('players', sa.Column('status_effects', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('race', sa.String(), nullable=True))
    op.add_column('players', sa.Column('mp', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('attack', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('defense', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('skills_data_json', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('abilities_data_json', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('spells_data_json', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('character_class', sa.String(), nullable=True))
    op.add_column('players', sa.Column('flags_json', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('active_quests', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('known_spells', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('spell_cooldowns', sa.JSON(), nullable=True))
    op.add_column('statuses', sa.Column('name', sa.String(), nullable=False))
    op.add_column('statuses', sa.Column('status_type', sa.String(), nullable=False))
    op.add_column('statuses', sa.Column('target_id', sa.String(), nullable=False))
    op.add_column('statuses', sa.Column('target_type', sa.String(), nullable=False))
    op.add_column('statuses', sa.Column('duration_turns', sa.Integer(), nullable=True))
    op.add_column('statuses', sa.Column('applied_at_time', sa.Integer(), nullable=True))
    op.add_column('statuses', sa.Column('source_id', sa.String(), nullable=True))
    op.add_column('statuses', sa.Column('state_variables', sa.JSON(), nullable=True))
    op.add_column('statuses', sa.Column('guild_id', sa.String(), nullable=False))
    op.add_column('statuses', sa.Column('effects', sa.JSON(), nullable=True))
    op.drop_column('statuses', 'placeholder')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('statuses', sa.Column('placeholder', sa.TEXT(), nullable=True))
    op.drop_column('statuses', 'effects')
    op.drop_column('statuses', 'guild_id')
    op.drop_column('statuses', 'state_variables')
    op.drop_column('statuses', 'source_id')
    op.drop_column('statuses', 'applied_at_time')
    op.drop_column('statuses', 'duration_turns')
    op.drop_column('statuses', 'target_type')
    op.drop_column('statuses', 'target_id')
    op.drop_column('statuses', 'status_type')
    op.drop_column('statuses', 'name')
    op.drop_column('players', 'spell_cooldowns')
    op.drop_column('players', 'known_spells')
    op.drop_column('players', 'active_quests')
    op.drop_column('players', 'flags_json')
    op.drop_column('players', 'character_class')
    op.drop_column('players', 'spells_data_json')
    op.drop_column('players', 'abilities_data_json')
    op.drop_column('players', 'skills_data_json')
    op.drop_column('players', 'defense')
    op.drop_column('players', 'attack')
    op.drop_column('players', 'mp')
    op.drop_column('players', 'race')
    op.drop_column('players', 'status_effects')
    op.drop_column('players', 'is_alive')
    op.drop_column('players', 'max_health')
    op.drop_column('players', 'hp')
    op.drop_column('players', 'state_variables')
    op.drop_column('players', 'action_queue')
    op.drop_column('players', 'current_action')
    op.drop_column('players', 'stats')
    op.drop_column('players', 'guild_id')
    op.drop_constraint(None, 'parties', type_='foreignkey')
    op.drop_column('parties', 'current_action')
    op.drop_column('parties', 'state_variables')
    op.drop_column('parties', 'leader_id')
    op.drop_column('parties', 'guild_id')
    op.drop_column('parties', 'name_i18n')
    op.drop_column('locations', 'guild_id')
    op.add_column('items', sa.Column('placeholder', sa.TEXT(), nullable=True))
    op.drop_constraint(None, 'items', type_='foreignkey')
    op.drop_column('items', 'value')
    op.drop_column('items', 'slot')
    op.drop_column('items', 'properties')
    op.drop_column('items', 'description_i18n')
    op.drop_column('items', 'name_i18n')
    op.drop_column('items', 'is_temporary')
    op.drop_column('items', 'state_variables')
    op.drop_column('items', 'quantity')
    op.drop_column('items', 'location_id')
    op.drop_column('items', 'owner_type')
    op.drop_column('items', 'owner_id')
    op.drop_column('items', 'guild_id')
    op.drop_column('items', 'template_id')
    op.add_column('inventory', sa.Column('placeholder', sa.TEXT(), nullable=True))
    op.create_table('world_state',
    sa.Column('key', sa.VARCHAR(), nullable=False),
    sa.Column('value', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.drop_table('npcs')
    op.drop_table('combats')
    op.drop_table('location_templates')
    op.drop_table('global_state')
    op.drop_table('events')
    op.drop_table('crafting_queues')
    # ### end Alembic commands ###
